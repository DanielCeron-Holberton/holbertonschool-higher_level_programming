The 7-base_geometry module to test
======================

Using add_integer
-----------------

Import add_integer from module

>>> BaseGeometry = BaseGeometry = __import__('7-base_geometry').BaseGeometry


>>> bg = BaseGeometry()

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

>>> bg.integer_validator("distance", 3)

>>> bg.integer_validator("distance", (3))

>>> bg.integer_validator("distance", (3,))
Traceback (most recent call last):
TypeError: distance must be an integer

>>> bg.integer_validator("distance", (-1))
Traceback (most recent call last):
ValueError: distance must be greater than 0

>>> bg.integer_validator(, 1)
Traceback (most recent call last):
SyntaxError: invalid syntax

>>> bg.integer_validator("age", [0])
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", 1.50)
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", {'p':1})
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", 999999999999999999999999999999999)

>>> bg.integer_validator("", 1)


